version: "3.9"

services:
  traefik-dev:
      image: traefik:v3.1
      container_name: traefik-dev
      restart: unless-stopped
      command:
        - --log.level=INFO
        # Entrypoints (HTTP + HTTPS)
        - --entrypoints.web.address=:80
        - --entrypoints.websecure.address=:443
        - --entrypoints.web.http.redirections.entrypoint.to=websecure
        - --entrypoints.web.http.redirections.entrypoint.scheme=https
        # Enable Docker as a provider
        - --providers.docker=true
        - --providers.docker.exposedbydefault=false
        # Let's Encrypt configuration
        - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
        - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
        - --certificatesresolvers.letsencrypt.acme.email=mrx4807@gmail.com
        - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
        # Optional dashboard (accessible on :8080)
        - --api.dashboard=true
        - --api.insecure=true
      ports:
        - "80:80"
        - "443:443"
        - "8080:8080"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - ./letsencrypt:/letsencrypt
      networks:
        - lexion_internal_net

  frontend:
    build:
      context: ./frontend1
      dockerfile: Dockerfile
    container_name: lectio-frontend
    restart: always
    networks:
      - lexion_internal_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${ADMIN_DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: Coupon-backend
    restart: always
    env_file:
      - .env
    networks:
      - lexion_internal_net
    depends_on:
      coupon-minio:
        condition: service_healthy
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${BACKEND_DOMAIN}`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  coupon-minio:
    image: minio/minio:latest
    container_name: Coupon_minio
    restart: unless-stopped
    volumes:
      - minio_data:/data
    networks:
      - lexion_internal_net
    environment:
      MINIO_ROOT_USER: "${MINIO_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_PASSWORD}"
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 3s
      retries: 10
      timeout: 5s
      start_period: 5s

  coupon_mongo:
    image: mongo:7
    container_name: Coupon_mongo
    restart: unless-stopped
    networks:
      - lexion_internal_net
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME?}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD?}"
    volumes:
      - mongo_data:/data/db

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    container_name: jenkins-server
    restart: unless-stopped
    user: root
    ports:
      - "50000:50000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jenkins_data:/var/jenkins_home
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    networks:
      - lexion_internal_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jenkins.rule=Host(`${JENKINS_DOMAIN}`)"
      - "traefik.http.routers.jenkins.entrypoints=websecure"
      - "traefik.http.routers.jenkins.tls.certresolver=letsencrypt"
      - "traefik.http.services.jenkins.loadbalancer.server.port=8080"
      - "traefik.http.routers.jenkins-webhook.rule=Host(`${JENKINS_DOMAIN}`) && PathPrefix(`/github-webhook/`)"
      - "traefik.http.routers.jenkins-webhook.entrypoints=websecure"
      - "traefik.http.routers.jenkins-webhook.tls.certresolver=letsencrypt"
  minio_init:
    image: minio/mc
    depends_on:
      - coupon-minio
    entrypoint: >
      sh -c "
        mc alias set local http://coupon-minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
        mc mb --ignore-existing local/images &&
        mc mb --ignore-existing local/documents &&
        mc mb --ignore-existing local/wa-sim
      "
    networks:
      - lexion_internal_net



volumes:
  minio_data:
  mongo_data:

networks:
  lexion_internal_net:
    name: coupon_lexion_internal_net
