/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as appUploadRouteImport } from './routes/(app)/upload'
import { Route as appTemplatesRouteImport } from './routes/(app)/templates'
import { Route as appSettingsRouteImport } from './routes/(app)/settings'
import { Route as appReviewRouteImport } from './routes/(app)/review'
import { Route as appRegulationsRouteImport } from './routes/(app)/regulations'
import { Route as appProfileRouteImport } from './routes/(app)/profile'
import { Route as appDraftRouteImport } from './routes/(app)/draft'
import { Route as appDashboardRouteImport } from './routes/(app)/dashboard'
import { Route as appAssistantRouteImport } from './routes/(app)/assistant'
import { Route as appContractsIndexRouteImport } from './routes/(app)/contracts.index'
import { Route as appContractsCreateRouteImport } from './routes/(app)/contracts.create'
import { Route as appContractsIdRouteImport } from './routes/(app)/contracts.$id'
import { Route as appCompareIdRouteImport } from './routes/(app)/compare.$id'

const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const appUploadRoute = appUploadRouteImport.update({
  id: '/upload',
  path: '/upload',
  getParentRoute: () => appRouteRoute,
} as any)
const appTemplatesRoute = appTemplatesRouteImport.update({
  id: '/templates',
  path: '/templates',
  getParentRoute: () => appRouteRoute,
} as any)
const appSettingsRoute = appSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => appRouteRoute,
} as any)
const appReviewRoute = appReviewRouteImport.update({
  id: '/review',
  path: '/review',
  getParentRoute: () => appRouteRoute,
} as any)
const appRegulationsRoute = appRegulationsRouteImport.update({
  id: '/regulations',
  path: '/regulations',
  getParentRoute: () => appRouteRoute,
} as any)
const appProfileRoute = appProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => appRouteRoute,
} as any)
const appDraftRoute = appDraftRouteImport.update({
  id: '/draft',
  path: '/draft',
  getParentRoute: () => appRouteRoute,
} as any)
const appDashboardRoute = appDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => appRouteRoute,
} as any)
const appAssistantRoute = appAssistantRouteImport.update({
  id: '/assistant',
  path: '/assistant',
  getParentRoute: () => appRouteRoute,
} as any)
const appContractsIndexRoute = appContractsIndexRouteImport.update({
  id: '/contracts/',
  path: '/contracts/',
  getParentRoute: () => appRouteRoute,
} as any)
const appContractsCreateRoute = appContractsCreateRouteImport.update({
  id: '/contracts/create',
  path: '/contracts/create',
  getParentRoute: () => appRouteRoute,
} as any)
const appContractsIdRoute = appContractsIdRouteImport.update({
  id: '/contracts/$id',
  path: '/contracts/$id',
  getParentRoute: () => appRouteRoute,
} as any)
const appCompareIdRoute = appCompareIdRouteImport.update({
  id: '/compare/$id',
  path: '/compare/$id',
  getParentRoute: () => appRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/assistant': typeof appAssistantRoute
  '/dashboard': typeof appDashboardRoute
  '/draft': typeof appDraftRoute
  '/profile': typeof appProfileRoute
  '/regulations': typeof appRegulationsRoute
  '/review': typeof appReviewRoute
  '/settings': typeof appSettingsRoute
  '/templates': typeof appTemplatesRoute
  '/upload': typeof appUploadRoute
  '/compare/$id': typeof appCompareIdRoute
  '/contracts/$id': typeof appContractsIdRoute
  '/contracts/create': typeof appContractsCreateRoute
  '/contracts': typeof appContractsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/assistant': typeof appAssistantRoute
  '/dashboard': typeof appDashboardRoute
  '/draft': typeof appDraftRoute
  '/profile': typeof appProfileRoute
  '/regulations': typeof appRegulationsRoute
  '/review': typeof appReviewRoute
  '/settings': typeof appSettingsRoute
  '/templates': typeof appTemplatesRoute
  '/upload': typeof appUploadRoute
  '/compare/$id': typeof appCompareIdRoute
  '/contracts/$id': typeof appContractsIdRoute
  '/contracts/create': typeof appContractsCreateRoute
  '/contracts': typeof appContractsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(app)': typeof appRouteRouteWithChildren
  '/(app)/assistant': typeof appAssistantRoute
  '/(app)/dashboard': typeof appDashboardRoute
  '/(app)/draft': typeof appDraftRoute
  '/(app)/profile': typeof appProfileRoute
  '/(app)/regulations': typeof appRegulationsRoute
  '/(app)/review': typeof appReviewRoute
  '/(app)/settings': typeof appSettingsRoute
  '/(app)/templates': typeof appTemplatesRoute
  '/(app)/upload': typeof appUploadRoute
  '/(app)/compare/$id': typeof appCompareIdRoute
  '/(app)/contracts/$id': typeof appContractsIdRoute
  '/(app)/contracts/create': typeof appContractsCreateRoute
  '/(app)/contracts/': typeof appContractsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/assistant'
    | '/dashboard'
    | '/draft'
    | '/profile'
    | '/regulations'
    | '/review'
    | '/settings'
    | '/templates'
    | '/upload'
    | '/compare/$id'
    | '/contracts/$id'
    | '/contracts/create'
    | '/contracts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/assistant'
    | '/dashboard'
    | '/draft'
    | '/profile'
    | '/regulations'
    | '/review'
    | '/settings'
    | '/templates'
    | '/upload'
    | '/compare/$id'
    | '/contracts/$id'
    | '/contracts/create'
    | '/contracts'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(app)/assistant'
    | '/(app)/dashboard'
    | '/(app)/draft'
    | '/(app)/profile'
    | '/(app)/regulations'
    | '/(app)/review'
    | '/(app)/settings'
    | '/(app)/templates'
    | '/(app)/upload'
    | '/(app)/compare/$id'
    | '/(app)/contracts/$id'
    | '/(app)/contracts/create'
    | '/(app)/contracts/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appRouteRoute: typeof appRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/upload': {
      id: '/(app)/upload'
      path: '/upload'
      fullPath: '/upload'
      preLoaderRoute: typeof appUploadRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/templates': {
      id: '/(app)/templates'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof appTemplatesRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/settings': {
      id: '/(app)/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof appSettingsRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/review': {
      id: '/(app)/review'
      path: '/review'
      fullPath: '/review'
      preLoaderRoute: typeof appReviewRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/regulations': {
      id: '/(app)/regulations'
      path: '/regulations'
      fullPath: '/regulations'
      preLoaderRoute: typeof appRegulationsRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/profile': {
      id: '/(app)/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof appProfileRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/draft': {
      id: '/(app)/draft'
      path: '/draft'
      fullPath: '/draft'
      preLoaderRoute: typeof appDraftRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/dashboard': {
      id: '/(app)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appDashboardRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/assistant': {
      id: '/(app)/assistant'
      path: '/assistant'
      fullPath: '/assistant'
      preLoaderRoute: typeof appAssistantRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/contracts/': {
      id: '/(app)/contracts/'
      path: '/contracts'
      fullPath: '/contracts'
      preLoaderRoute: typeof appContractsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/contracts/create': {
      id: '/(app)/contracts/create'
      path: '/contracts/create'
      fullPath: '/contracts/create'
      preLoaderRoute: typeof appContractsCreateRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/contracts/$id': {
      id: '/(app)/contracts/$id'
      path: '/contracts/$id'
      fullPath: '/contracts/$id'
      preLoaderRoute: typeof appContractsIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/compare/$id': {
      id: '/(app)/compare/$id'
      path: '/compare/$id'
      fullPath: '/compare/$id'
      preLoaderRoute: typeof appCompareIdRouteImport
      parentRoute: typeof appRouteRoute
    }
  }
}

interface appRouteRouteChildren {
  appAssistantRoute: typeof appAssistantRoute
  appDashboardRoute: typeof appDashboardRoute
  appDraftRoute: typeof appDraftRoute
  appProfileRoute: typeof appProfileRoute
  appRegulationsRoute: typeof appRegulationsRoute
  appReviewRoute: typeof appReviewRoute
  appSettingsRoute: typeof appSettingsRoute
  appTemplatesRoute: typeof appTemplatesRoute
  appUploadRoute: typeof appUploadRoute
  appCompareIdRoute: typeof appCompareIdRoute
  appContractsIdRoute: typeof appContractsIdRoute
  appContractsCreateRoute: typeof appContractsCreateRoute
  appContractsIndexRoute: typeof appContractsIndexRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appAssistantRoute: appAssistantRoute,
  appDashboardRoute: appDashboardRoute,
  appDraftRoute: appDraftRoute,
  appProfileRoute: appProfileRoute,
  appRegulationsRoute: appRegulationsRoute,
  appReviewRoute: appReviewRoute,
  appSettingsRoute: appSettingsRoute,
  appTemplatesRoute: appTemplatesRoute,
  appUploadRoute: appUploadRoute,
  appCompareIdRoute: appCompareIdRoute,
  appContractsIdRoute: appContractsIdRoute,
  appContractsCreateRoute: appContractsCreateRoute,
  appContractsIndexRoute: appContractsIndexRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appRouteRoute: appRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
